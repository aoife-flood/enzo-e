Parameter:  :p:`Method` : :p:`list`
:Summary: :s:`Sequence of numerical methods to apply.`
:Type:    :t:`list` ( :t:`string` )
:Default: :d:`none`
:Scope:     :c:`Cello`

:e:`This parameter specifies the list of numerical methods to use, and
is analagous to "EvolveLevel" routine in ENZO.  Each method in the
list is applied in the order specified.  Possible methods include:`

  * :t:`"comoving_expansion"` :e:`adds comoving expansion terms to the
    physical variables.`
  * :t:`"cosmology"` :e:`for writing redshift to monitor output.`
  * :t:`"grackle"` :e:`for heating and cooling methods in the Enzo
    Grackle library`
  * :t:`"gravity"` :e:`solves for the gravitational potential given gas
    and particle density fields.`
  * :t:`"heat"` :e:`for the forward-Euler heat-equation solver, which
    is used primarily for demonstrating how new Methods are
    implemented in Enzo-E`
  * :t:`"pm_deposit"` :e:`deposits "dark" particle density into
    "density_particle" field using CIC for "gravity" method.`
  * :t:`"pm_update"` :e:`moves cosmological "dark" particles based on
    positions, velocities, and accelerations.`  **This will be phased out
    in favor of a more general "move_particles" method.**
  * :t:`"ppm"` :e:`for Enzo-E's PPM hydrodynamics method.`  *This may be
    phased out in favor of using a more general "hydro" method
    instead, with a specific hydro solver specified.*
  * :t:`"ppml"` :e:`for the PPML ideal MHD solver.`  *This may be phased
    out in favor of using a more general "mhd" method instead, with a
    specific mhd solver specified.*
  * :t:`"mhd_vlct"` :e:`for the VL + CT (van Leer + Constrained Transport) MHD
    solver.`
  * :t:`"trace"` :e:`for moving tracer particles.`  **This will be phased
    out in favor of a more general "move_particles" method.**
  * :t:`"turbulence"` :e:`computes random forcing for turbulence
    simulations.`
gravity
-------

:Parameter:  :p:`Method` : :p:`gravity` : :p:`solver`
:Summary: :s:`Name of the linear solver to use`
:Type:    :t:`string`
:Default: :d:`"unknown"`
:Scope:     :z:`Enzo`

:e:`Identifier for the linear solver to use, which must be included in the "Solver:list" parameter.`

----

:Parameter:  :p:`Method` : :p:`gravity` : :p:`grav_const`
:Summary: :s:`Gravitational constant`
:Type:    :t:`float`
:Default: :d:`6.67384e-8`
:Scope:     :z:`Enzo`

:e:`Gravitational constant used in place of G.  The default is G in cgs units.`


----

:Parameter:  :p:`Method` : :p:`gravity` : :p:`order`
:Summary: :s:`Order of accuracy discretization to use for the discrete Laplacian`
:Type:    :t:`integer`
:Default: :d:`4`
:Scope:     :z:`Enzo`

:e:`Second, fourth, and sixth order discretizations of the Laplacian
are available; valid values are 2, 4, or 6.`

----

:Parameter:  :p:`Method` : :p:`gravity` : :p:`accumulate`
:Summary: :s:`Whether to add one layer of ghost zones when refreshing particle density`
:Type:    :t:`logical`
:Default: :d:`true`
:Scope:     :z:`Enzo`

:e:`This should be true for all runs with particles, since particle
mass deposited in the "density_particle" field may bleed into the
first layer of ghost zones.  This parameter ensures that that mass
will be included in "density_total".`

pm_deposit
----------

:Parameter:  :p:`Method` : :p:`pm_deposit` : :p:`alpha`
:Summary:    :s:`Compute potential at time t + alpha*dt`
:Type:       :t:`float`
:Default:    :d:`0.5`
:Scope:     :z:`Enzo`

:e:`Sets the factor defining at what time to deposit mass into the
density_total field.  The default is 0.5, meaning t + 0.5*dt.`

ppm
---